import Container from '../../ui/Container/Container';
import s from './Equipment.module.scss';

import { Swiper, SwiperSlide } from 'swiper/react';
import { Navigation } from 'swiper/modules';

import 'swiper/css';
import 'swiper/css/navigation';
import { useState } from 'react';
import { data } from './data';
function Equipment() {
  const [isBeginning, setIsBeginning] = useState(true);
  const [isEnd, setIsEnd] = useState(false);

  return (
    <section className={s.equipment} id="equipment">
      <Container>
        <div className={s.wrapper}>
          <div className={s.title}>
            <h5>–ó–∞–ø–∞—Å–Ω—ã–µ —á–∞—Å—Ç–∏ –¥–ª—è —Å–∫—Ä–µ–ø–µ—Ä–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</h5>

            <div className={s.nav}>
              <div className={`${s.prev} ${isBeginning ? s.disabled : ''}`}>
                ‚Üê
              </div>
              <div className={`${s.next} ${isEnd ? s.disabled : ''}`}>‚Üí</div>
            </div>
          </div>

          <Swiper
            modules={[Navigation]}
            spaceBetween={24}
            slidesPerView={4}
            onSwiper={(swiper) => {
              setIsBeginning(swiper.isBeginning);
              setIsEnd(swiper.isEnd);
            }}
            onSlideChange={(swiper) => {
              setIsBeginning(swiper.isBeginning);
              setIsEnd(swiper.isEnd);
            }}
            navigation={{
              nextEl: `.${s.next}`,
              prevEl: `.${s.prev}`,
            }}
            breakpoints={{
              360: { slidesPerView: 1 },
              576: { slidesPerView: 2 },
              768: { slidesPerView: 3 },
              1024: { slidesPerView: 4 },
            }}
          >
            {data.map((item, i) => (
              <SwiperSlide key={i}>
                <div className={s.card}>
                  <img src={item.img} alt="" />
                  <h6>{item.title}</h6>
                  <p>{item.text}</p>
                </div>
              </SwiperSlide>
            ))}
          </Swiper>

          <div className={s.nav}>
            <div className={`${s.prev} ${isBeginning ? s.disabled : ''}`}>
              ‚Üê
            </div>
            <div className={`${s.next} ${isEnd ? s.disabled : ''}`}>‚Üí</div>
          </div>

          <div className={s.info}>
            <div className={s.info_text}>
              <p>
                –ó–∞–¥–∞—á–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –≤ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∂–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ
                —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≤ —Å–≤–æ—ë–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏,
                –¥–æ–ø—É—Å–∫–∞–µ—Ç –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–æ—á–µ—Ä–µ–¥–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π. –£—á–∏—Ç—ã–≤–∞—è –∫–ª—é—á–µ–≤—ã–µ
                —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è, –∫—É—Ä—Å –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
                –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
                –ø–µ—Ä–≤–æ–æ—á–µ—Ä–µ–¥–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π. –ü—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–∞—è —Ç–æ—á–∫–∞ –∑—Ä–µ–Ω–∏—è
                –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç, —á—Ç–æ —è–≤–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –ø–æ–±–µ–¥—ã –∏–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
                –ø—Ä–∏–∑–≤–∞–Ω—ã –∫ –æ—Ç–≤–µ—Ç—É. –ö–∞–∫ —É–∂–µ –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ —É–ø–æ–º—è–Ω—É—Ç–æ, –º–Ω–æ–≥–∏–µ
                –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ª–∏—á–Ω–æ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω—ã –∫–∞–∫ –ø—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç—ã –Ω–∞ —Ä–æ–ª—å –∫–ª—é—á–µ–≤—ã—Ö
                —Ñ–∞–∫—Ç–æ—Ä–æ–≤.
              </p>
              <p>
                –ó–∞–¥–∞—á–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –≤ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∂–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ
                —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≤ —Å–≤–æ—ë–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏,
                –¥–æ–ø—É—Å–∫–∞–µ—Ç –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–æ—á–µ—Ä–µ–¥–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π. –£—á–∏—Ç—ã–≤–∞—è –∫–ª—é—á–µ–≤—ã–µ
                —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è, –∫—É—Ä—Å –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
                –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
                –ø–µ—Ä–≤–æ–æ—á–µ—Ä–µ–¥–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π.
              </p>
            </div>
            <div className={s.info_form}>
              <h6>–°–¥–µ–ª–∞—Ç—å –±—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑</h6>
              <p>
                –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é—Ç –í–∞—Å –∏ –ø–æ–¥–±–µ—Ä—É—Ç
                –Ω–∞–∏–ª—É—á—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
              </p>
              <form
                className={s.form}
                onSubmit={(e) => {
                  e.preventDefault();
                  const form = e.target;
                  const name = form[0].value;
                  const phone = form[1].value;
                  const message = `üìù <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>\nüë§ –ò–º—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`;
                  fetch(
                    `https://api.telegram.org/bot8179904872:AAEsfjpX2jpVpANpy9vKAA7NLO2TlqABtgk/sendMessage`,
                    {
                      method: 'POST',
                      headers: {
                        'Content-Type': 'application/json',
                      },
                      body: JSON.stringify({
                        chat_id: '-1002793514701',
                        text: message,
                        parse_mode: 'HTML',
                      }),
                    },
                  )
                    .then((res) => {
                      if (res.ok) {
                        console.log('‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
                        form.reset();
                      } else {
                        console.error('‚ùå Telegram error');
                      }
                    })
                    .catch((err) => console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', err));
                }}
              >
                <input
                  type="text"
                  placeholder="–í–∞—à–µ –∏–º—è"
                  className={s.input}
                  required
                />
                <input
                  type="tel"
                  placeholder="–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω"
                  className={s.input}
                  required
                />
                <button type="submit" className={s.btn}>
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                </button>
                <p>
                  –û—Ç–ø—Ä–∞–≤–ª—è—è –∑–∞—è–≤–∫—É, —è —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏{' '}
                  <a href="/privacy-policy">–ü–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
                </p>
              </form>
            </div>
          </div>
        </div>
      </Container>
    </section>
  );
}

export default Equipment;

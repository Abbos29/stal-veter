import s from './CallModal.module.scss';
import useModalStore from '../../../store/modalStore';
import clsx from 'clsx';
import { useEffect } from 'react';
import toast from 'react-hot-toast';

const CallModal = () => {
  const { closeModal, isModalOpen } = useModalStore();
  useEffect(() => {
    if (isModalOpen) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = '';
    }

    return () => {
      document.body.style.overflow = '';
    };
  }, [isModalOpen]);
  return (
    <div
      className={clsx(s.overlay, isModalOpen && s.active)}
      onClick={closeModal}
    >
      <div className={s.modal} onClick={(e) => e.stopPropagation()}>
        <button className={s.close} onClick={closeModal}>
          <img src="/img/close_icon.svg" alt="close" />
        </button>
        <h2>–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫</h2>
        <p>
          –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é—Ç –í–∞—Å –∏ –ø–æ–¥–±–µ—Ä—É—Ç –Ω–∞–∏–ª—É—á—à–µ–µ
          –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
        </p>
        <form
          className={s.form}
          onSubmit={(e) => {
            e.preventDefault();
            const form = e.target;
            const name = form[0].value;
            const phone = form[1].value;
            const message = `üìù <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>\nüë§ –ò–º—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`;
            fetch(
              `https://api.telegram.org/bot8179904872:AAEsfjpX2jpVpANpy9vKAA7NLO2TlqABtgk/sendMessage`,
              {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                  chat_id: '-1002793514701',
                  text: message,
                  parse_mode: 'HTML',
                }),
              },
            )
              .then((res) => {
                if (res.ok) {
                  closeModal();
                  toast.success('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
                  form.reset();
                } else {
                  toast.error('–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!');
                  console.error('‚ùå Telegram error');
                }
              })
              .catch((err) => {
                toast.error('–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!');
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', err);
              });
          }}
        >
          <input type="text" placeholder="–í–∞—à–µ –∏–º—è" required />
          <input type="tel" placeholder="–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω" required />
          <button type="submit">–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</button>
          <p className={s.policy}>
            –û—Ç–ø—Ä–∞–≤–ª—è—è –∑–∞—è–≤–∫—É, —è —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏{' '}
            <a href="/privacy-policy"> –ü–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
          </p>
        </form>
      </div>
    </div>
  );
};

export default CallModal;

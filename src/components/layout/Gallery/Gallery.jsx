import React, { useRef, useEffect, useState } from 'react';
import Container from '../../ui/Container/Container';
import s from './Gallery.module.scss';
import { data } from './data';
import toast from 'react-hot-toast';
function Gallery() {
  const containerRef = useRef(null);
  const [scrollValue, setScrollValue] = useState(0);

  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ ‚Üí –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–∑—É–Ω–æ–∫
  useEffect(() => {
    const el = containerRef.current;
    if (!el) return;

    const handleScroll = () => {
      const percent = (el.scrollLeft / (el.scrollWidth - el.clientWidth)) * 100;
      setScrollValue(percent);
    };

    el.addEventListener('scroll', handleScroll);

    // –°—Ç–∞—Ä—Ç —Å —Å–µ—Ä–µ–¥–∏–Ω—ã
    el.scrollLeft = (el.scrollWidth - el.clientWidth) * 0;
    handleScroll();

    return () => el.removeEventListener('scroll', handleScroll);
  }, []);

  // –ü–æ–ª–∑—É–Ω–æ–∫ ‚Üí –£–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
  const handleRangeChange = (e) => {
    const percent = parseFloat(e.target.value);
    setScrollValue(percent);

    const el = containerRef.current;
    if (!el) return;
    el.scrollLeft = ((el.scrollWidth - el.clientWidth) * percent) / 100;
  };

  return (
    <section className={s.gallery}>
      <Container>
        <div className={s.wrapper}>
          {/* <h5>–ì–∞–ª–µ—Ä–µ—è</h5> */}
          <div className={s.about}>
            <img src="/img/gallery_about.png" alt="about" />
            <div className={s.about_inner}>
              <h6>–ö–æ–º–ø–∞–Ω–∏—è ¬´–°—Ç–∞–ª—å–Ω–æ–π –í–µ—Ç–µ—Ä¬ª</h6>
              <p>
                –ù–∞—Å –≤—ã–±–∏—Ä–∞—é—Ç –∫–∞–∫ –∫—Ä—É–ø–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–µ–≥–∏–æ–Ω–∞, —Ç–∞–∫ –∏ –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–µ
                –≥—Ä—É–ø–ø—ã –∫–æ–º–ø–∞–Ω–∏–π. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª
                –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –±–æ–ª—å—à–æ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É
                –∫–æ–º–ø–∞–Ω–∏–π –†–æ—Å—Å–∏–∏ –∏ –°–ù–ì.
              </p>
              <p>
                –í —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ
                –º–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–µ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –ß–ü–£, 3D –ø–µ—á–∞—Ç—å –∏ –ª–∞–∑–µ—Ä–Ω–æ–µ 3D
                —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Ñ—Ç –¥–ª—è –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏
                –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
              </p>
              <p>
                –ú—ã –ø–æ–º–æ–≥–∞–µ–º —Ä–µ—à–∏—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä –∑–∞–¥–∞—á –≤ —Å—Ñ–µ—Ä–µ —Ä–µ–≤–µ—Ä—Å
                –∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥–∞, 3D –ø–µ—á–∞—Ç–∏, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–∏—Ö —Ä–∞–±–æ—Ç –≤ –º–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏.
                –ù–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏ –º–æ–≥—É—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —á–∞—Å—Ç–Ω—ã–µ –ª–∏—Ü–∞, —Ç–∞–∫ –∏
                –∫–æ–º–ø–∞–Ω–∏–∏.
              </p>
              <p>–ö–æ–º–ø–∞–Ω–∏—è "–°—Ç–∞–ª—å–Ω–æ–π –≤–µ—Ç–µ—Ä" –±—ã–ª–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –≤ 2019 –≥–æ–¥—É.</p>
            </div>
          </div>

          <div className={s.slider}>
            <div className={s.slider_container} ref={containerRef}>
              {data.map((link, index) => (
                <>
                  <img src={link} alt={'Gallery Image ' + (index + 1)} />
                </>
              ))}
            </div>

            {/* –ü–æ–ª–∑—É–Ω–æ–∫ */}
            {/* <input
              type="range"
              className={s.slider_range}
              min="0"
              max="100"
              value={scrollValue}
              step="0.1"
              onChange={handleRangeChange}
            /> */}
          </div>
          <div className={s.make_order}>
            <div className={s.info}>
              <h5>–°–¥–µ–ª–∞—Ç—å –±—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑</h5>
              <p>
                –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é—Ç –í–∞—Å –∏ –ø–æ–¥–±–µ—Ä—É—Ç
                –Ω–∞–∏–ª—É—á—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
              </p>
            </div>
            <div className={s.form_wrapper}>
              <form
                className={s.form}
                onSubmit={(e) => {
                  e.preventDefault();
                  const form = e.target;
                  const name = form[0].value;
                  const phone = form[1].value;
                  const message = `üìù <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>\nüë§ –ò–º—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`;
                  fetch(
                    `https://api.telegram.org/bot8179904872:AAEsfjpX2jpVpANpy9vKAA7NLO2TlqABtgk/sendMessage`,
                    {
                      method: 'POST',
                      headers: {
                        'Content-Type': 'application/json',
                      },
                      body: JSON.stringify({
                        chat_id: '-1002793514701',
                        text: message,
                        parse_mode: 'HTML',
                      }),
                    },
                  )
                    .then((res) => {
                      if (res.ok) {
                        console.log('‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
                        toast.success('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
                        form.reset();
                      } else {
                        toast.error('–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!');
                        console.error('‚ùå Telegram error');
                      }
                    })
                    .catch((err) => {
                      toast.error('–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!');
                      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', err);
                    });
                }}
              >
                <input
                  type="text"
                  placeholder="–í–∞—à–µ –∏–º—è"
                  className={s.input}
                />
                <input
                  type="tel"
                  placeholder="–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω*"
                  className={s.input}
                  required
                />
                <button type="submit" className={s.btn}>
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                </button>
              </form>
              <p>
                –û—Ç–ø—Ä–∞–≤–ª—è—è –∑–∞—è–≤–∫—É, —è —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏{' '}
                <a href="/privacy-policy">–ü–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
              </p>
            </div>
          </div>
        </div>
      </Container>
    </section>
  );
}

export default Gallery;
